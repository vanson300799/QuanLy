@model WebModels.WebContact
@{
    var webmodule = (WebModule)ViewBag.WebModule;
    var moduletran = webmodule;
    TempData["Title"] = Utility.UseStringHasValue(webmodule.SeoTitle, webmodule.Title);
    TempData["Description"] = Utility.UseStringHasValue(webmodule.MetaDescription, webmodule.Description);
    TempData["Keywords"] = Utility.UseStringHasValue(webmodule.MetaKeywords, webmodule.SeoTitle);
}
<script>
    function OnFailure1() {
        alert("@Html.Raw(Resources.Common.SendFaulty)");
    }
    function OnSuccess1(data, status, xhr) {
        if (data.Success) {
            alert('@Html.Raw(Resources.Common.ThanksForContact)');
            $('#frmcontact')[0].reset();
        } else {
            alert(data.Error);
        }
    }
</script>
<link href="~/Content/themes/web/css/global.css" rel="stylesheet" />

<h1><span>Liên hệ với chúng tôi</span></h1>
@using (Ajax.BeginForm("_PubIndex", new { area = "ContentType" },
                        new AjaxOptions
                        {
                            OnSuccess = "OnSuccess1",
                            OnFailure = "OnFailure1"
                        }, new { id = "frmcontact" }))
{
    <fieldset class="titled_box">
    
        <div class="row">
            <div class="col-xs-12 col-sm-6">
                <p class="form-group">
                    <label for="email">Họ và tên</label>
                    @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", @placeholder = "* Nhập Tên" })
                </p>
                <p class="form-group">
                    <label for="email">Email</label>
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "* Nhập Email" })
                    @Html.ValidationMessageFor(m => m.Email)
                </p>             
                <p class="form-group">
                    <label for="email">Địa chỉ</label>
                    @Html.TextBoxFor(m => m.Address, new { @class = "form-control", @placeholder = "Nhập Địa chỉ" })
                </p>
                <p class="form-group">
                    <label for="email">Điện thoại</label>
                    @Html.TextBoxFor(m => m.Mobile, new { @class = "form-control", @placeholder = "Nhập Số Điện Thoại" })
                </p>
                <p class="form-group">
                    <label for="email">Tiêu đề</label>
                    @Html.TextBoxFor(m => m.Title, new { @class = "form-control", @placeholder = "* Nhập Tiêu Đề" })
                </p>
                <p class="form-group">
                    <label for="email">Nội dung</label>
                    @Html.TextAreaFor(m => m.Body, new { @rows = "5", @class = "form-control" })
                </p>
                <div class="submit">
                    <input class="button btn btn-default" type="submit" name="submitMessage" id="submitMessage" value="Gửi">
                </div>
            </div>
            <div class="col-xs-12 col-sm-6">
                @Html.Action("_Body", "WebSimpleContent", new { key = "maps", area = "" })
                <br />
                <address class="contact" style="color: #000;">
                    @Html.Action("_Body", "WebSimpleContent", new { key = "ContactInfo", area = "" })
                </address>
            </div>          
        </div>
      
    </fieldset>
       @Html.AntiForgeryToken()
}



