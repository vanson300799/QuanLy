@model ImportOrderViewModel
@{
    var checkEmployee = WEB.WebHelpers.UserInfoHelper.GetUserData().StationID.HasValue;
    var minDate = ViewBag.notbookDate;
}
@{
    Layout = "~/Areas/Admin/Views/Shared/_LayoutEmpty.cshtml";
}

<script>
    //function onChangeCombobox() {
    //    $("#editimportchild").data("kendoGrid").refresh();
    //}
</script>

@using (Html.BeginForm("Add", "ImportOrder", FormMethod.Post, new { @id = "importorder", enctype = "multipart/form-data", @class = "form-horizontal fix" }))
{
    @Html.HiddenFor(x => x.ID)
    if (checkEmployee)
    {
        @Html.HiddenFor(x => x.StationID)
    }
    <div class="validation-group">
        @Html.ValidationSummary(true)
    </div>

    <div class="row">
        <div class="control-group col-6">
            @Html.Label(WebModels.WebResources.Date, new { @class = "control-label" })
            <div class="controls">
                @Html.TextBoxFor(m => m.DateString, new { @class = "input-block-level datepicker", @id = "Date" })
                @Html.ValidationMessageFor(m => m.DateString)
            </div>
            <span class="form-obligatory">*</span>
        </div>
        <div class="control-group col-6">
            @Html.Label(WebModels.WebResources.BillID, new { @class = "control-label" })
            <div class="controls">
                @Html.TextBoxFor(m => m.InvoiceCode, new { @class = "input-block-level", @id = "InvoiceCode" })
                @Html.ValidationMessageFor(m => m.InvoiceCode)
            </div>
            <span class="form-obligatory">*</span>
        </div>

        <div class="control-group col-6">
            @Html.Label(WebModels.WebResources.Supplier, new { @class = "control-label" })
            <div class="controls">
                <div style="width:99%;">
                    @(Html.Kendo().ComboBoxFor(m => m.SupplierID)
                                                              .DataTextField("SupplierDisplayName")
                                                              .DataValueField("ID")
                                                              .Placeholder("Chọn nhà cung cấp...")
                                                              .Suggest(true)
                                                              .Filter("contains")
                                                              .Name("SupplierID")
                                                              .HtmlAttributes(new { id = "ComboboxSupplier" })
                                                              .DataSource(source =>
                                                              {
                                                                  source.Read(read =>
                                                                  {
                                                                      read.Action("GetSupplier", "Supplier");
                                                                  })
                                                                  .ServerFiltering(true);
                                                              })
                                                              .Events(e => e.DataBound("onDataBoundCombobox").Change("onChangeCombobox"))
                )
                </div>
                @Html.ValidationMessageFor(m => m.SupplierID)
            </div>
            <span class="form-obligatory">*</span>
        </div>

        <div class="control-group col-6">
            @Html.Label(WebModels.WebResources.Shop, new { @class = "control-label" })
            <div class="controls">
                @if (checkEmployee)
                {
                    @Html.TextBoxFor(m => m.StationName, new { @class = "input-block-level none-edit", @readonly = "readonly" })
                }
                else
                {
                    <div style="width:99%;">
                        @(Html.Kendo().ComboBoxFor(m => m.StationID)
                                                              .DataTextField("StationDisplayName")
                                                              .DataValueField("ID")
                                                              .Placeholder("Chọn cửa hàng...")
                                                              .Suggest(true)
                                                              .Filter("contains")
                                                              .Name("StationID")
                                                              .HtmlAttributes(new { id = "ComboboxStation" })
                                                              .DataSource(source =>
                                                              {
                                                                  source.Read(read =>
                                                              {
                                                                  read.Action("GetStation", "Station");
                                                              })
                                                                  .ServerFiltering(true);
                                                              })
                                                              .Events(e => e.DataBound("onDataBoundCombobox").Change("onChangeCombobox"))
                         )
                    </div>
                    @Html.ValidationMessageFor(m => m.StationID)
                }
            </div>
        </div>

        <div class="control-group col-12">
            @Html.Label(WebModels.WebResources.Information, new { @class = "control-label" })
            <div class="controls">
                @Html.TextAreaFor(m => m.Information, new { @class = "input-block-level", @id = "Information" })
            </div>
        </div>
    </div>

    @Html.Action("IndexChildView", "ImportOrder", new { area = "Admin" })

    <div class="form-actions">
        <button class="k-button" type="submit" id="save" [disabled]="!proposalForm.valid"><i class="icon-save"></i>@Resources.Common.SaveChanges</button>
        <button class="k-button destroy" type="reset">@WebModels.WebResources.Cancel</button>
    </div>
}

<script type="text/javascript">
    var datestring = '@(minDate)';
    var stringarray = datestring.split(" ");
    var timestring = stringarray[1];
    var datestring = stringarray[0];
    var datearray = datestring.split("/");
    var timearray = timestring.split(":");

    $(document).ready(function () {
        $('#importorder').submit(function (e) {
            e.preventDefault();
        });

        if (screen.width > 1500) {
            top.winsetup("Đơn nhập hàng", 1440 * 0.9, screen.height * 0.75, true);
        }
        else {
            top.winsetup("Đơn nhập hàng", screen.width * 0.9, screen.height * 0.7, true);
        }


        $("#save").click(function (e) {
            var model = {};
            function checkHasStation() {
                if ('@checkEmployee' === 'True') {
                    if (!$("#StationID").valid()) {
                        return true;
                    }
                    else {
                        model.StationID = $("#StationID").val();
                        return false;
                    }
                }
                else {
                    if (!$("#ComboboxStation").valid()) {
                        return true;
                    }
                    else {
                        model.StationID = $("#ComboboxStation").data('kendoComboBox').value()
                        return false;
                    }
                }
            }
            if (!$("#Date").valid() || !$("#InvoiceCode").valid() || !$("#ComboboxSupplier").valid()) {
                return;
            }
            checkHasStation();
            model.ID = $("#ID").val();
            model.InvoiceCode = $("#InvoiceCode").val();
            model.DateString = $("#Date").val();
            model.SupplierID = $("#ComboboxSupplier").data('kendoComboBox').value();
            model.Information = $("#Information").val();
            // ... continue to set others

            var orderDetailData = $("#editimportchild").data("kendoGrid").dataSource.data();

            model.ImportOrdersDetails = [];
            for (var i = 0; i < orderDetailData.length; i++) {
                var currentItem = orderDetailData[i];
                var orderDetailObj = {};
                if (typeof currentItem.ProductID === 'object' && currentItem.ProductID !== null) {
                    orderDetailObj.ProductID = currentItem.ProductID.ID;
                }
                else {
                    orderDetailObj.ProductID = currentItem.ProductID;
                };
                if (typeof currentItem.StationID === 'object' && currentItem.StationID !== null) {
                    orderDetailObj.StationID = currentItem.StationID.ID;
                }
                else {
                    orderDetailObj.StationID = currentItem.StationID;
                };
                orderDetailObj.Date = model.Date;
                orderDetailObj.InputNumber = currentItem.InputNumber;
                orderDetailObj.InputPrice = currentItem.InputPrice;
                orderDetailObj.Money = currentItem.Money;

                // ... continue to set others
                if (orderDetailObj.ProductID !== undefined && orderDetailObj.InputNumber !== undefined && orderDetailObj.InputPrice !== undefined && orderDetailObj.Money !== undefined) {
                    model.ImportOrdersDetails.push(orderDetailObj);
                }

            }
            for (var i = 0; i < model.ImportOrdersDetails.length; i++) {
                if (model.ImportOrdersDetails[i].ProductID == undefined || model.ImportOrdersDetails[i].InputNumber == undefined || model.ImportOrdersDetails[i].InputPrice == undefined) {
                    var crequired = true;
                }
            }
            if ($("td [aria-invalid='true']").length != 0) {
                var crequired = true;
            }
            if (model.ImportOrdersDetails.length == 0) {
                var crequired = true;
            }

            if (crequired) {
                alert("Vui lòng nhập liệu đủ thông tin!")
            }
            else {
                   $.ajax({
                        url: "@Url.Action("Add", "ImportOrder")",
                        contentType: "application/json",
                        method: "post",
                        data: JSON.stringify(model),
                       success: function (data) {
                           if (data.message && data.message !== "") {
                               alert(data.message);
                               return;
                           }
                             create_success(data);
                        },
                        error: function (d) {
                             console.log(d);
                        }
                   });
             }

            function create_success(data) {
                if (!data.ErrorMessage || data.ErrorMessage.length === 0) {
                    top.winclose();
                    top.$("#grid").data("kendoGrid").dataSource.read();
                    location.reload();
                } else {
                    alert(data.ErrorMessage);
                }
            }

            function alerterror() {
                alert("Vui lòng nhập dữ liệu bản ghi chi tiết");
            }
        });
    });

    function thumbprocess(obj, target, noimg) {
        var state = $(obj).attr("state");
        var cthumb = $(obj).next().attr('url');
        if (state == '' || state == null) {
            $(obj).next().val('');
            $('#' + target).find('img').attr('src', noimg);
            $(obj).text("Khôi phục"); $(obj).attr("state", "1")
        } else {
            $(obj).text("Xóa");
            $('#' + target).find('img').attr('src', cthumb);
            $(obj).next().val(cthumb); $(obj).attr("state", "")
        }
    }
    var datetimePicker = $(".datepicker").kendoDateTimePicker({
        format: "dd/MM/yyyy HH:mm",
        timeFormat: "HH:mm",
        culture: "vi-VN",
        value: new Date(),
        min: new Date(parseInt(datearray[2]), parseInt(datearray[0]) - 1, parseInt(datearray[1]), parseInt(timearray[0]) + 1, 0)
    });
</script>
