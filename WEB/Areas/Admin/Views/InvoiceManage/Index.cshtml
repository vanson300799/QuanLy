@model InvoiceManageViewModel
@{
    WebContext db = new WebContext();
    var roleLock = "Manager";
    var lastRow = 10;
    var roles = Roles.GetRolesForUser();
    var userRoleIds = db.WebRoles.Where(x => roles.Contains(x.RoleName)).Select(y => y.RoleId).ToList();
    var userLock = db.WebRoles.Where(x => roles.Contains(x.RoleName)).Select(y => y.RoleName).ToList();
    var roleWebModule = db.AccessWebModuleRoles.AsNoTracking().FirstOrDefault(x => userRoleIds.Contains(x.RoleId) && x.WebModule.URL == "/admin/InvoiceManage");
}
@{
    ViewBag.Title = "Quản Lý Hóa Đơn";
}

<script type="text/javascript">
    function refresh_detail() {
        $("#DetailView").data("kendoGrid").dataSource.data([]);
    }
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
    var rowselected = [];
    var parent;
    function returnInvoiceCode(e) {
        $("#DetailBillID").html("Chi tiết đơn hàng " + e);
    }

    var selectedCell = null;

    function change_handler(e) {
        var $grid = e.sender; //grid ref
        var $cell = $grid.select(); // selected td
        var $row = $cell.closest('tr'); //selected tr
        var cell_index = $cell.index();
        selectedCell = $cell;
        if (cell_index === @lastRow) {
            return;
        }

        $('td.k-state-selected').closest('tr').find('td').addClass('k-state-selected');

        //$grid.clearSelection();
        //$grid.select($row);

        var rowData = $grid.dataItem($row);
        rowselected = [];
        var len = this.select().length;
        for (i = 0; i < len; i++) {
            rowselected.push(rowData.ID);
            parent = rowData.ID;
            InvoiceCode = rowData.InvoiceCode;
            localStorage.parent = parent;
        }
        loaddata(parent);
        returnInvoiceCode(InvoiceCode);
        $(".title-dealDetail").css("display", "block");
    }

    function binding_handler(e) {
        rowselected = [];
    }

    function edit_handler(e) {
        //e = $(this).parent().css("display","none");
        //alert(e);
        //opendlg("/admin/ImportOrder/edit/" + e);
        var $row = selectedCell.closest('tr'); //selected tr
        var rowData = $("#grid").data("kendoGrid").dataItem($row);
        opendlg("/admin/InvoiceManage/edit/" + rowData.ID);
    }

    function lock_handler(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        $.ajax({
                url: "@Url.Action("RecordLock", "InvoiceManage")",
                contentType: "application/json",
            method: "post",
            data: JSON.stringify({ id: dataItem.ID}),
                          success: function (data) {
                                lock_success(data);
                          },
            error: function (d) {
                console.log(d.responseText);
                          }
                    });
    }

    function SetIconLock(e) {
        if (e) {
            var status = "Đã khoá";
            return status;
        }
        else {
            var status = "Đang mở";
            return status;
        }
    }

    function lock_success(data) {
        if (!data.ErrorMessage || data.ErrorMessage.length === 0) {
            var grid = $("#grid").data("kendoGrid").dataSource.get(data.ID);
            grid.set("IsLock", data.currentIsLock);
            if (data.currentIsLock) {
                $("#grid").data("kendoGrid").tbody.find("tr[data-uid='" + grid.uid + "']").find(".k-grid-Edit").remove();
                $("#grid").data("kendoGrid").tbody.find("tr[data-uid='" + grid.uid + "']").find(".k-grid-delete").remove();
                $("#grid").data("kendoGrid").tbody.find("tr[data-uid='" + grid.uid + "']").find(".k-grid-Lock").css("background-image", "url(/Content/themes/admin/img/lock.png)");
            }
            else {
                $("#grid").data("kendoGrid").tbody.find("tr[data-uid='" + grid.uid + "']").find(".k-grid-Lock").css("background-image", "url(/Content/themes/admin/img/unlock.png)");
            }
        } else {
            alert(data.ErrorMessage);
        }
    }
    function onGridDataBound(e) {
        var grid = this;
        grid.tbody.find("tr[role='row']").each(function () {
            var model = grid.dataItem(this);
            if (model.Date < new Date('@ViewBag.datekey')) {
                $(this).find(".k-grid-Edit").parent().html("Đã khoá sổ");
                $(this).find(".k-grid-Edit").remove();
                $(this).find(".k-grid-delete").remove();
            }
            if (model.IsLock) {
                $(this).find(".k-grid-Edit").remove();
                $(this).find(".k-grid-delete").remove();
                $(this).find(".k-grid-Lock").css("background-image", "url(/Content/themes/admin/img/lock.png)");
            }
            else {
                 $(this).find(".k-grid-Lock").css("background-image", "url(/Content/themes/admin/img/unlock.png)");
            }
        });
    }
    $(document).ready(function () {
        $("#btnadd").click(function () {
            localStorage.removeItem("parent");
            opendlg("/admin/InvoiceManage/add");
        });
        $("#btnedit").click(function () {
            if (rowselected.length > 0) {
                opendlg("/admin/InvoiceManage/edit/" + rowselected[0]);
            } else {
                alert("Không có khoản mục nào được chọn.");
            }
        });
        $("#btndelete").click(function () {
            if (rowselected.length > 0) {
                opendlg("/admin/InvoiceManage/deletes/" + rowselected);
            } else {
                alert("Không có khoản mục nào được chọn.");
            }
        });

        loaddata();

    });
    function sumTotal(e) {
        var ds = $("#grid").data("kendoGrid").dataSource;
        var filters = ds.filter();
        var allData = ds.data();
        var query = new kendo.data.Query(allData);
        var data = query.filter(filters).data;   
        var sum = 0;
        for (i = 0; i < data.length; i++) {
            var dataS = data[i];
            sum += dataS[e];
        };
        return sum;
    }

    jQuery.validator.methods.date = function (value, element) {
        var isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
        if (isChrome) {
            var d = new Date();
            return this.optional(element) || !/Invalid|NaN/.test(parseDate(value));
        } else {
            return this.optional(element) || !/Invalid|NaN/.test(parseDate(value));
        }
    };
</script>
<div id="main">
    <div id="left"></div>
    @if (roleWebModule != null && roleWebModule.View.HasValue && !roleWebModule.View.Value)
    {
        @Html.Action("Denied", "Account", new { area = "admin" })
    }
    @if (roleWebModule != null && roleWebModule.View.HasValue && roleWebModule.View.Value)
    {
        <div class="container-fluid" id="importgrid">
            <div class="page-header">
                <div class="pull-left">
                    <div class="breadcrumbs">
                        <h1>Quản lý hoá đơn</h1>
                    </div>
                </div>
                <div class="pull-right">

                    @using (Html.BeginForm("ExportExcel", "InvoiceManage", FormMethod.Post, new { @id = "general", enctype = "multipart/form-data", @class = "form-horizontal fix" }))
                    {
                        <ul class="actions">
                            @if (roleWebModule != null && roleWebModule.Add.HasValue && roleWebModule.Add.Value)
                            {
                                <li>
                                    <a href="#" id="btnadd" class="k-button"><i class="icon-plus"></i> @WebModels.WebResources.Add </a>
                                </li>
                            }
                        </ul>

                        @Html.HiddenFor(m => m.DataExport)
                        <button id="btnsubmit" class="k-button">@WebModels.WebResources.ExportExcel</button>
                    }
                </div>
            </div>
            <div class="row-fluid" id="scroll-table">
                <div class="span12">
                    <div class="box">
                        <div class="box-content nopadding">
                            @(Html.Kendo().Grid<InvoiceManageViewModel>()
                                                .Name("grid")
                                                .Selectable()
                                                .Columns(columns =>
                                                {
                                                    columns.Bound(p => p.Date).Title(WebModels.WebResources.Date).ClientFooterTemplate("Tổng")
                                                    .Filterable(filterable =>filterable.UI(@<text>function (element) {
                                                            element.kendoDateTimePicker({
                                                                culture: 'vi-VN'
                                                            });
                                                        }</text>))
                                                    .Format("{0:dd/MM/yyyy HH:mm}").Width(150).HtmlAttributes(new { style = "text-align:center;" });
                                                    columns.Bound(p => p.InvoiceCode).Title(WebModels.WebResources.BillID);
                                                    columns.Bound(p => p.CustomerName).Title(WebModels.WebResources.Customer);
                                                    columns.Bound(p => p.StationName).Title(WebModels.WebResources.Station);
                                                    columns.Bound(p => p.Note).Title(WebModels.WebResources.Information).HtmlAttributes(new { style = "text-align:center;" });
                                                    columns.Bound(p => p.TotalSaleAmount).Title(WebModels.WebResources.TotalQuantity).ClientFooterTemplate("#= kendo.format('{0:N2} lít', sumTotal('TotalSaleAmount'))#")
                                                    .HtmlAttributes(new { style = "text-align:center;" }).Format("{0:N2} lít");
                                                    columns.Bound(p => p.Money).Title(WebModels.WebResources.Money).ClientFooterTemplate("#= kendo.format('{0:N2} đ', sumTotal('Money'))#").HtmlAttributes(new { style = "text-align:center;" }).Format("{0:N2}đ");
                                                    columns.Bound(p => p.Tax).Title(WebModels.WebResources.Tax).ClientFooterTemplate("#= kendo.format('{0:N2} đ', sumTotal('Tax'))#").HtmlAttributes(new { style = "text-align:center;" }).Format("{0:N2}đ");
                                                    columns.Bound(p => p.TotalMoney).Title(WebModels.WebResources.TotalMoney).ClientFooterTemplate("#= kendo.format('{0:N2} đ', sumTotal('TotalMoney'))#").HtmlAttributes(new { style = "text-align:center;" }).Format("{0:N2}đ");
                                                    columns.Bound(p => p.IsLock).Title(WebModels.WebResources.Status)
                                                        .HtmlAttributes(new { style = "text-align:center;" })
                                                        .ClientTemplate("#=SetIconLock(IsLock)#");
                                                    columns.Command(command =>
                                                    {
                                                        if (userLock.Contains(roleLock))
                                                        {
                                                            command.Custom("Lock").Click("lock_handler");
                                                        }
                                                        if (roleWebModule != null && roleWebModule.Edit.HasValue && roleWebModule.Edit.Value)
                                                        {
                                                            command.Custom(Resources.Common.Edit).Click("edit_handler");
                                                        }
                                                        if (roleWebModule != null && roleWebModule.Delete.HasValue && roleWebModule.Delete.Value)
                                                        {
                                                            command.Destroy();
                                                        }
                                                    }).HtmlAttributes(new { style = "text-align:center;" }).Title("Hành động").Width(215);
                                                })
                                                .Pageable()
                                                .Selectable(select => select.Mode(GridSelectionMode.Single).Type(GridSelectionType.Cell))
                                                .Sortable()
                                                .Filterable()
                                                  .Editable(ed => ed.DisplayDeleteConfirmation("Bạn có chắc chắn xoá mục này?"))
                                                .DataSource(dataSource => dataSource
                                                    .Ajax()
                                                    .Sort(sort => sort.Add("Date").Descending())
                                                    .Batch(true)
                                                    .ServerOperation(false)
                                                    .Events(events => { events.Error("error_handler"); events.RequestEnd("refresh_detail"); })
                                                    .Model(model => { model.Id(p => p.ID);
                                                    })
                                                    .ServerOperation(false)
                                                    .Read(read => read.Action("InvoiceManage_Read", "InvoiceManage"))
                                                    .Destroy(destroy => destroy.Action("InvoiceManage_Destroy", "InvoiceManage"))
                                                )
                                                .Events(events => events.Change("change_handler").DataBinding("binding_handler").DataBound("onGridDataBound"))
                            )
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="container-fluid">
            <div class="row-fluid">
                <div class="span12">
                    <div class="title-dealDetail">
                        <ul class="nav nav-tabs">
                            <li class="active"><a href="#" id="DetailBillID">Chi tiết đơn hàng</a></li>
                        </ul>
                        <br>
                    </div>
                    <div class="box">
                        <div class="box-content nopadding">
                            <div id="DetailView"></div>
                            <script>
                                var rowselect;
                                function loaddata(p) {
                                    if ($("#DetailView").data("kendoGrid") != null) {
                                        $('#DetailView').html('');
                                        delete $("#DetailView").data("kendoGrid");
                                    }
                                    var dataSource = new kendo.data.DataSource({
                                        transport: {
                                            read: {
                                                url: "/admin/InvoiceManage/_InvoiceManageDetail/" + p,
                                                dataType: "json"
                                            }
                                        },
                                        schema: {
                                            model: {
                                                id: "ID",
                                                fields: {
                                                    ProductName: { type: "string" },
                                                    ProductCode: { type: "string" },
                                                    StationCode: { type: "string" },
                                                    StationName: { type: "string" },
                                                    Money: { type: "decimal" },
                                                    Price: { type: "decimal" },
                                                    SaleAmount: { type: "decimal" },
                                                }
                                            }
                                        },
                                        pageSize: 10
                                    });
                                    $("#DetailView").kendoGrid({
                                        dataSource: dataSource,
                                        pageable: true,
                                        columns: [
                                            { field: "ProductCode", title: "Hàng hoá", template: "#=ProductCode# : #=ProductName#" },
                                            { field: "SaleAmount", title: "Số lượng", attributes: { "style": "text-align:center" }, template: "#= (data.SaleAmount) ? kendo.format('{0:n2} lít', parseFloat(data.SaleAmount)) : '' #" },
                                            { field: "Price", title: "Đơn giá", attributes: { "style": "text-align:center" }, template: "#= (data.Price) ? kendo.format('{0:n0}đ', parseFloat(data.Price)) : '' #" },
                                            { field: "Money", title: "Thành tiền", attributes: { "style": "text-align:center" }, template: "#= (data.Money) ? kendo.format('{0:n0}đ', parseFloat(data.Money)) : '' #" },
                                        ],
                                    });
                                }
                            </script>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<script id="template" type="text/x-kendo-template">
    <button class="k-button pull-right" onclick="edit_handler()" id="btnedit">Chỉnh Sửa</button>
</script>
<script>
    $(document).ready(function () {
        $("#btnsubmit").click(function (e) {
            e.preventDefault();
            var dataSource = $("#grid").data("kendoGrid").dataSource;
            var filters = dataSource.filter();
            var allData = dataSource.data();
            var query = new kendo.data.Query(allData);
            var grid = query.filter(filters).data;
            var models = [];
            for (var i = 0; i < grid.length; i++) {
                var dataItem = grid[i];
                var model = {};
                model.Date = dataItem.Date;
                model.InvoiceCode = dataItem.InvoiceCode;
                model.CustomerName = dataItem.CustomerName;
                model.StationName = dataItem.StationName;
                model.Note = dataItem.Note;
                model.TotalSaleAmount = dataItem.TotalSaleAmount;
                model.Money = dataItem.Money;
                model.Tax = dataItem.Tax;
                model.TotalMoney = dataItem.TotalMoney;

                models.push(model);
            }
            var dataString = JSON.stringify(models);
            var dataReplace = dataString.replace('"', "?");
            $("input[name='DataExport']").val(dataReplace);

            setTimeout(function () {
                $("#general").submit();
            }, 100);
        });
    });
</script>
<style>
    .k-webkit {
        overflow: auto !important;
    }
    #btnsubmit {
        outline: none;
        background-color: #339933;
        display: block;
        font-size: 16px;
        min-width: 26px;
        color: #fff;
        text-decoration: none;
        position: relative;
        border-radius: 25px;
        text-align: center;
        padding-right: 2px;
        padding: 0.3vw 2vw;
        line-height: 30px;
    }
    .actions > li {
        float: left;
        list-style: none;
        margin-right: 10px !important;
        padding: 0;
    }
</style>
