@{
    WebContext db = new WebContext();
    var roles = Roles.GetRolesForUser();
    var userRoleIds = db.WebRoles.Where(x => roles.Contains(x.RoleName)).Select(y => y.RoleId).ToList();
    var roleWebModule = db.AccessWebModuleRoles.AsNoTracking().FirstOrDefault(x => userRoleIds.Contains(x.RoleId) && x.WebModule.URL == "/admin/User");
}
@{
    ViewBag.Title = "Danh Mục Người Dùng";
}

<script type="text/javascript">
    
    var rowselected = [];
    function change_handler(e) {
        rowselected = [];
        var len = this.select().length;
        for (i = 0; i < len; i++) {
            rowselected.push(this.dataItem(this.select()[i]).UserId);
        }
    }
    function binding_handler(e) {
        rowselected = [];
    }
    function changepassword_handler(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        opendlg("/admin/user/changepassword/?userName=" + dataItem.UserName);
    }
    function delete_handler(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        opendlg("/admin/user/delete/" + dataItem.UserId);
    }

    function edit_handler(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        opendlg("/admin/user/edit/" + dataItem.UserId);
    }

    function modules_handler(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        opendlg("/admin/user/ModulesMapping/" + dataItem.UserId);

    }
    function sites_handler(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        opendlg("/admin/user/AdminSitesMapping/" + dataItem.UserId);
    }

    $(document).ready(function () {
        $("#btnadd").click(function () {
            opendlg("/admin/user/add");
        });
        $("#btnedit").click(function () {
            if (rowselected.length > 0) {
                opendlg("/admin/user/edit/" + rowselected[0]);
            } else {
                alert("Không có khoản mục nào được chọn.");
            }
        });
        $("#btndelete").click(function () {
            if (rowselected.length > 0) {
                opendlg("/admin/user/deletes/" + rowselected);
            } else {
                alert("Không có khoản mục nào được chọn.");
            }
        });
    });
</script>

<div id="main">
    <div id="left"></div>
    @if (roleWebModule != null && roleWebModule.View.HasValue && !roleWebModule.View.Value)
    {
        @Html.Action("Denied", "Account", new { area = "admin" })
    }
    @if (roleWebModule != null && roleWebModule.View.HasValue && roleWebModule.View.Value)
    {
        <div class="container-fluid">
            <div class="page-header">
                <div class="pull-left">
                    <div class="breadcrumbs">
                        <h1>@ViewBag.title</h1>
                    </div>
                </div>
                <div class="pull-right">
                    <ul class="actions">
                        @if (roleWebModule != null && roleWebModule.Add.HasValue && roleWebModule.Add.Value)
                        {
                            <li>
                                <a href="#" id="btnadd" class="k-button"><i class="icon-plus"></i><span>@WebResources.Add</span>  </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span12">
                    <div class="box">
                        <div class="box-content nopadding">
                            @(Html.Kendo().Grid<UserProfileViewModel>()
            .Name("grid")
            .Columns(columns =>
            {
                columns.Bound(p => p.StaffCode).Title(WebModels.WebResources.Code).HtmlAttributes(new { style = "text-align:center;width:150px"});
                columns.Bound(p => p.UserName ).ClientTemplate("<span style='height:100%'><img src='#:Avatar#' width='30px' style='height:30px'> #:UserName#</span>")
                    .Title(WebModels.AccountResources.UserName)/*.HtmlAttributes(new { style = "display: flex;justify-content: center;" })*/;
                columns.Bound(p => p.Role).Title(WebModels.AccountResources.Role);
                columns.Bound(p => p.FullName).Title(WebModels.AccountResources.FulllName);
                columns.Bound(p => p.StationName).Title(WebModels.AccountResources.Shop);
                columns.Bound(p => p.Email).Title(WebModels.AccountResources.Email);
                columns.Bound(p => p.Mobile).Title(WebModels.AccountResources.Mobile);
                columns.Command(command =>
                {
                    //command.Custom("Module").Click("modules_handler");
                    //command.Custom("Site").Click("sites_handler");
                    if (roleWebModule != null && roleWebModule.Edit.HasValue && roleWebModule.Edit.Value)
                    {
                        command.Custom("Sửa").Click("edit_handler");
                        command.Custom("Pass").Click("changepassword_handler");
                    }
                    if (roleWebModule != null && roleWebModule.Delete.HasValue && roleWebModule.Delete.Value)
                    {
                        command.Custom("delete").Click("delete_handler");
                    }
                }).HtmlAttributes(new { style = "text-align:center;" }).Title("Hành động").Width(255);
            })
            .Pageable()
            .Selectable(select => select.Mode(GridSelectionMode.Multiple))
            .Sortable()
                .Filterable()
            .DataSource(dataSource => dataSource
                .Ajax()
                .Model(model => model.Id(p => p.UserId))
                .PageSize(10)
                .Read(read => read.Action("Users_Read", "User"))
             )
              .Events(events => events.Change("change_handler").DataBinding("binding_handler"))
                        )
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<style>
    .k-webkit {
        overflow: auto !important;
    }
</style>