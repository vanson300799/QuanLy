@model WebModels.WebModule
@{
    Layout = "~/Areas/Admin/Views/Shared/_LayoutEmpty.cshtml";
}
@using (Html.BeginForm("Add", "WebModule", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal fix" }))
{

    @(Html.Kendo().TabStrip()
    .Name("tabstrip")
    .Items(tabstrip =>
    {
        tabstrip.Add().Text("Thông tin")
            .Selected(true)
            .Content(@<text>

                @if (ApplicationService.Languages != null)
                {
                    <div class="control-group">
                        @Html.LabelFor(m => m.Culture, new { @class = "control-label" })
                        <div class="controls">
                            @(Html.Kendo().DropDownListFor(m => m.Culture)
                                                                      .HtmlAttributes(new { style = "width: 150px" })
                                                                      .DataTextField("Title")
                                                                      .DataValueField("ID").BindTo(
                                                                    (IEnumerable<WebModels.Language>)ApplicationService.Languages
                                                                      )
                            )
                        </div>
                    </div>
                }

                <div class="control-group">
                    @Html.LabelFor(m => m.UID, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(m => m.UID, new { @class = "input-block-level" })
                        @Html.ValidationMessageFor(m => m.UID)
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(m => m.Title, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(m => m.Title, new { @class = "input-block-level" })
                        @Html.ValidationMessageFor(m => m.Title)
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(m => m.ContentTypeID, new { @class = "control-label" })
                    <div class="controls">
                        @(Html.Kendo().DropDownListFor(m => m.ContentTypeID)
                                                          .HtmlAttributes(new { style = "width: 200px" })
                                                          .DataTextField("Title")
                                                          .DataValueField("ID")
                                                          .DataSource(source =>
                                                          {
                                                              source.Read(read =>
                                                              {
                                                                  read.Action("GetContentTypes", "ContentType");
                                                              });
                                                          })
                        )
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(m => m.ParentID, new { @class = "control-label" })
                    <div class="controls">
                        @Html.HiddenFor(m => m.ParentID, new { @id = "parent" })
                        <select id="select_parent_0" class="disp-none select-parent"></select>
                        <select id="select_parent_1" class="disp-none select-parent"></select>
                        <select id="select_parent_2" class="disp-none select-parent"></select>
                        <select id="select_parent_3" class="disp-none select-parent"></select>
                        <select id="select_parent_4" class="disp-none select-parent"></select>
                        <script>
                            function loaddatafor(obj, id) {
                                $.ajax({
                                    type: 'GET', url: '/admin/webmodule/getbyparent/' + id,
                                    contentType: "application/json; charset=utf-8",
                                    dataType: "json", async: false,
                                    success: function (data) {
                                        var html_temp = "<option value='$id'>$title</option>";
                                        var len = data.length;
                                        if (len > 0) {
                                            var html = "<option value=''>Chọn danh mục</option>";
                                            for (var i = 0; i < len; i++) {
                                                html += html_temp.replace("$id", data[i].ID).replace("$title", data[i].Title);
                                            }
                                            $(obj).html(html); $(obj).show();
                                        }
                                    },
                                    error: function (data) { alert("Dịch vụ dữ liệu danh mục tin tức bị lỗi. Khởi động lại trình duyệt.") }
                                });
                            }
                            $(document).ready(function () {
                                var init_parent = null;
                                var data = [];
                                $.ajax({
                                    type: 'GET', url: '/admin/webmodule/getparentid/' + init_parent,
                                    contentType: "application/json; charset=utf-8",
                                    dataType: "json",
                                    async: false,
                                    success: function (d) {
                                        for (i = 0; i < d.length; i++) {
                                            data.push(d[i]);
                                        }
                                    },
                                    error: function (d) { }
                                });
                                loaddatafor($('#select_parent_0'), null);
                                var dlen = data.length;
                                if (dlen > 0) {
                                    for (i = 0; i < dlen; i++) {
                                        $('#select_parent_' + i + ' option[value="' + data[dlen - i - 1] + '"]').attr("selected", "selected");
                                        loaddatafor($('#select_parent_' + (i + 1)), data[dlen - i - 1]);
                                    }
                                }
                                var dataparents = $('.select-parent');
                                for (var s = 0; s < dataparents.length; s++) {
                                    $('#select_parent_' + s).change({ index: s }, function (event) {
                                        var obj = $(this);
                                        var id = $(this).val();
                                        for (i = event.data.index + 1; i < dataparents.length; i++) {
                                            dataparents.eq(i).hide();
                                        }
                                        if (id.length > 0) {
                                            $('#parent').val(id);
                                            loaddatafor($(obj).next(), id);
                                        } else {
                                            if (event.data.index > 0) {
                                                $('#parent').val(dataparents.eq(event.data.index - 1).val());
                                            } else {
                                                $('#parent').val("");
                                            }
                                        }
                                    });
                                }

                            });
                        </script>
                    </div>
                </div>

                <div class="control-group">
                    @Html.LabelFor(m => m.URL, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(m => m.URL, new { @class = "span7" })

                        @Html.DropDownListFor(
                                                        m => m.Target,
                                                        new SelectList(new List<SelectListItem>
                                                         {
                                                            new SelectListItem{ Text="Chuyển trang", Value = "_self" },
                                                            new SelectListItem{ Text="Trang mới", Value = "_blank" }
                                                         }, "Value", "Text")
                                                        )
                    </div>
                </div>

                <div class="control-group">
                    @Html.LabelFor(m => m.Description, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextAreaFor(m => m.Description, new { @class = "input-block-level" })
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(m => m.Image, new { @class = "control-label" })
                    <div class="controls">
                        <div class="ctr-thumb" data-lang="">
                            <div class="thumb" style="width: 120px; height: 100px;">
                                <img src='@String.Format("{0}",!string.IsNullOrEmpty(Model.Image)?Model.Image:ApplicationService.NoImage)' />
                                @Html.HiddenFor(m => m.Image, new { @class = "hf-image" })
                            </div>
                            <div class="act">
                                <ul>
                                    <li>
                                        <a href="javascrit:void(0)" style="position:relative; ">
                                            <span style=" top:0px; width: 140px; left: 0; position: absolute">Ảnh từ máy tính</span>
                                            <input class="file-image" name="image" data-lang="" accept="image/jpeg,image/png"
                                                   style="opacity: 0; height:20px; cursor: pointer;" type="file" />
                                        </a>
                                    </li>
                                    <li><a class="thumb-gallery" href="javascript: openwin('/admin/upload/image?uid=@ViewBag.GAK&func=setimagepath', '_blank', 900, 550)">Ảnh từ thư viện</a></li>
                                    <li><a href="javascript:openwin('/admin/upload/imagelink?uid=@ViewBag.GAK&func=setimagepath', '_blank', 700, 180)" class="thumb-link">Ảnh từ liên kết khác</a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
                
                @*  <div class="control-group">
                        @Html.LabelFor(m => m.CodeColor, new { @class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.CodeColor, new { @class = "span7" })


                        </div>
                    </div>*@
                <div class="row-fluid control-group">
                    <div style="width:99%;">
                        <div class="box">
                            <div class="box-title">
                                <h3><i class="icon-th"></i>  @Html.DisplayNameFor(m => m.Body)</h3>
                            </div>
                            <div class="box-content nopadding">
                                @Html.TextAreaFor(m => m.Body, new { @id = "ckeditor", @style = "height:550px;" })
                                <script type="text/javascript">
                                    var editor = CKEDITOR.replace('ckeditor', {
                                        customConfig: '/content/ckeditor/config.js',
                                        filebrowserBrowseUrl: '/admin/upload/file?uid=@ViewBag.GAK',
                                        filebrowserImageBrowseUrl: '/admin/upload/image?uid=@ViewBag.GAK',
                                        filebrowserImageUploadUrl: '/admin/upload/imageck?uid=@ViewBag.GAK',
                                        filebrowserFlashBrowseUrl: '/admin/upload/flash?uid=@ViewBag.GAK',
                                        filebrowserFlashUploadUrl: '/admin/upload/flashck?uid=@ViewBag.GAK',
                                        height: '400px'
                                    });
                                </script>
                            </div>
                        </div>
                    </div>
                </div>



                <div class="control-group">
                    @Html.LabelFor(m => m.Status, new { @class = "control-label" })
                    <div class="controls">
                        @Html.DropDownListFor(
                                                        m => m.Status,
                                                        new SelectList(new List<SelectListItem>
                                                         {
                                                            new SelectListItem{ Text="Phát hành", Value = "1" },
                                                            new SelectListItem{ Text="Nội bộ", Value = "0" },
                                                             new SelectListItem{ Text="Khóa", Value = "-1" }

                                                         }, "Value", "Text")
                                                        )
                    </div>
                </div>
                <div class="control-group">
                    @Html.Label(Resources.Common.ShowOn, new { @class = "control-label" })
                    <div class="controls">
                        <span class="span6">@Html.CheckBoxFor(m => m.ShowOnMenu, new { }) Thanh điều hướng website </span>
                        <span class="span6">@Html.CheckBoxFor(m => m.ShowOnAdmin, new { }) Thanh điều hướng quản trị</span>
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(m => m.Order, new { @class = "control-label" })
                    <div class="controls">
                        @(Html.Kendo().NumericTextBoxFor<int>(m => m.Order)
                                                        .Min(0)
                                                        .Max(100)
                                                        .Value(1).Format("#")
                        )
                    </div>
                </div>
                <div class="validation-group">
                    <div class="controls">
                        @Html.ValidationSummary(true)
                    </div>
                </div>



            </text>);

        tabstrip.Add().Text("Cấu hình SEO")
            .Content(@<text>
                <div class="control-group">
                    @Html.LabelFor(m => m.SeoTitle, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(m => m.SeoTitle, new { @class = "input-block-level" })
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(m => m.MetaTitle, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(m => m.MetaTitle, new { @class = "input-block-level" })
                    </div>
                </div>

                <div class="control-group">
                    @Html.LabelFor(m => m.MetaKeywords, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextAreaFor(m => m.MetaKeywords, new { @class = "input-block-level" })
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(m => m.MetaDescription, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextAreaFor(m => m.MetaDescription, new { @class = "input-block-level" })
                    </div>
                </div>
            </text>);

    })
    )


    <div class="form-actions">
        <button class="btn btn-primary" type="submit"><i class="icon-save"></i>@Resources.Common.SaveChanges</button>
    </div>
    @Html.AntiForgeryToken()
}
<script type="text/javascript">
    top.winsetup("@Html.Raw(Resources.Common.AddItem)", 900, 550, true);
    function create_success() {
        top.winclose();
        top.$("#grid").data("kendoGrid").dataSource.read();
        top.treeview.dataSource.read();
    }

    var imageFilter = new Array('.jpg', '.png', '.gif', '.bmp');
    function checkFileType(file, filter) {
        var fileName = file.name;
        var fileExtension = fileName.substring(fileName.lastIndexOf('.'));
        if (filter.indexOf(fileExtension.toLowerCase()) < 0) {
            return false;
        }
        return true;
    }
    var maxImageFileSize = 5242880;
    function checkFileSize(file, maxFileSize) {
        if (file.size > maxFileSize) {
            return false;
        }
        return true;
    }
    var current_thumb = "";
    $(document).ready(function () {
        current_thumb = $('.thumb #image').val();
    });
    $('.file-image').change(function (e) {
        var files = this.files;
        if (files.length > 0) {
            var i = 0;
            var isValid = checkFileType(files[i], imageFilter) && checkFileSize(files[i], maxImageFileSize);
            if (isValid) {
                var reader = new FileReader();
                reader.readAsDataURL(files[i]);
                reader.onloadend = function (e) {
                    var result = e.target.result;
                    if (result != null) {
                        $('.ctr-thumb .thumb img').attr('src', result);
                    }
                }
            }
            else {
                alert('File: [' + files[i].name + '] tải lên không hợp lệ.\nFile hợp lệ là file ảnh có định dạng: ' + imageFilter.toString() + ' và dung lượng tối đa cho phép là: ' + maxImageFileSize / (1024 * 1024) + 'MB');
            }
        }
    });
    $('.file-icon').change(function (e) {
        var files = this.files;
        if (files.length > 0) {
            var i = 0;
            var isValid = checkFileType(files[i], imageFilter) && checkFileSize(files[i], maxImageFileSize);
            if (isValid) {
                var reader = new FileReader();
                reader.readAsDataURL(files[i]);
                reader.onloadend = function (e) {
                    var result = e.target.result;
                    if (result != null) {
                        $('.ctr-thumb-icon .thumb-icon img').attr('src', result);
                    }
                }
            }
            else {
                alert('File: [' + files[i].name + '] tải lên không hợp lệ.\nFile hợp lệ là file ảnh có định dạng: ' + imageFilter.toString() + ' và dung lượng tối đa cho phép là: ' + maxImageFileSize / (1024 * 1024) + 'MB');
            }
        }
    });
    function setimagepath(path) {
        $('.ctr-thumb .thumb img').attr('src', path);
        $('.ctr-thumb .thumb .hf-image').val(path);
        var fileimage = $('.file-image');
        fileimage = fileimage.replaceWith(fileimage.clone(true));
    }
    function seticonpath(path) {
        $('.ctr-thumb-icon .thumb-icon img').attr('src', path);
        $('.ctr-thumb-icon .thumb-icon .hf-icon').val(path);
        var fileimage = $('.file-icon');
        fileimage = fileimage.replaceWith(fileimage.clone(true));
    }
</script>


<style>
    .ctr-thumb-icon .act ul li {
        list-style: square;
        color: #111;
    }

        .ctr-thumb-icon .act ul li a {
            color: #111;
        }

    .ctr-thumb-icon .thumb-icon {
        float: left;
    }

    .ctr-thumb-icon .act {
        float: left;
    }
</style>