@{
    WebContext db = new WebContext();
    var roles = Roles.GetRolesForUser();
    var userRoleIds = db.WebRoles.Where(x => roles.Contains(x.RoleName)).Select(y => y.RoleId).ToList();
    var roleWebModule = db.AccessWebModuleRoles.AsNoTracking().FirstOrDefault(x => userRoleIds.Contains(x.RoleId) && x.WebModule.URL == "/admin/RevenueRecalculation");
    var totalWeigh = ViewBag.totalWeigh;
    var totalCostPrice = ViewBag.totalCostPrice;
}
@{
    ViewBag.Title = "Tính lại doanh thu hóa đơn";
}

<div class="row container-fluid">
    <div class="span12 row-recacluation manage-car-search row-re-calculate">
        <div class="pull-left">
            <div class="breadcrumbs">
                <h1>@ViewBag.title</h1>
            </div>
        </div>
    </div>
    <div class="span12 row-recacluation" style="display: flex;">
        <div class="input-datetime">
            <form action="">
                <input type="text" name="datepickerMonth" id="datepickerMonth">
            </form>
        </div>

        @(Html.Kendo().ComboBox().Name("StationID")
                            .DataTextField("StationDisplayName")
                            .DataValueField("ID")
                            .Placeholder("Chọn cửa hàng ...")
                            .Suggest(true)
                            .Filter("contains")
                            .HtmlAttributes(new { id = "ComboboxStation" })
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("GetStation", "Station", new { area="Admin"});
                                })
                                .ServerFiltering(true);
                            })
                            .Events(e => e.DataBound("onDataBoundCombobox").Change("onChangeCombobox"))
                         )
        <span id="general-button" class="button-recaluation">
            <span class="btn-download btn-recal" id="recal">
                <p class="text-14-500 padding-text-plan-drive">Tính lại</p>
            </span>
        </span>
    </div>
</div>

<div class="container-fluid" id="dealDetail">
    <div class="row-fluid">
        <div class="span12">
            <div class="box">
                <div class="box-content nopadding">
                    <div id="recalDetail"></div>
                    <script>
                        var rowselected;
                        var columns = [
                            { field: "InvoiceCode", title: "Số hóa đơn" },
                            { field: "TotalRevenue", title: "Tổng doanh thu", template: "#= (data.TotalRevenue !== undefined) ? kendo.format('{0:n0}đ', parseFloat(data.TotalRevenue)) : '' #" },
                            { field: "CustomerName", title: "Khách hàng" },
                            { field: "Vehicle", title: "Phương tiện" },
                            { field: "StationName", title: "Cửa hàng" },
                            { field: "Note", title: "Ghi chú" },
                            { field: "TotalQuantity", title: "Số lượng", template: "#= (data.TotalQuantity) ? kendo.format('{0:n2} lít', parseFloat(data.TotalQuantity)) : '' #" },
                            { field: "TotalFreightCharge", title: "Cước vận chuyển", template: "#= (data.TotalFreightCharge) ? kendo.format('{0:n0}đ', parseFloat(data.TotalFreightCharge)) : '' #" },
                            { field: "TotalDiscount", title: "Chiết khấu", template: "#= (data.TotalDiscount) ? kendo.format('{0:n0}đ', parseFloat(data.TotalDiscount)) : '' #" },
                            { field: "TotalMoney", title: "Tổng tiền", template: "#= (data.TotalMoney) ? kendo.format('{0:n0}đ', parseFloat(data.TotalMoney)) : '' #" },
                            { field: "CustomerPayment", title: "Khách trả", template: "#= (data.CustomerPayment) ? kendo.format('{0:n0}đ', parseFloat(data.CustomerPayment)) : '' #" }];

                        function loaddata(a) {
                            if ($("#recalDetail").data("kendoGrid") != null) {
                                $('#recalDetail').html('');
                                $("#recalDetail").data("kendoGrid");
                            }
                            $("#recalDetail").kendoGrid({
                                scrollable: false,
                                columns: columns
                            });
                        }
                    </script>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="d-flex justify-content-center">
    <div class="loader" style="display:none; margin-top: 30px;"></div>
</div>
<script>
    $(document).ready(function () {
        var now = new Date();
        var nowString = now.toString();
        var nowArray = nowString.split(" ");
        var month = nowArray[1];
        switch (month) {
            default:
                month = 2;
                break;
            case "Jan":
                month = 1;
                break;
            case "Feb":
                month = 2;
                break;
            case "Mar":
                month = 3;
                break;
            case "Apr":
                month = 4;
                break;
            case "May":
                month = 5;
                break;
            case "Jun":
                month = 6;
                break;
            case "Jul":
                month = 7;
                break;
            case "Aug":
                month = 8;
                break;
            case "Sep":
                month = 9;
                break;
            case "Oct":
                month = 10;
                break;
            case "Nov":
                month = 11;
                break;
            case "Dec":
                month = 12;
                break;
        }

        var year = nowArray[3];
        var monthString = month + "/" + year;
        var monthSet = "Tháng " + monthString;
        $("#datepickerMonth").val(monthSet);
        loaddata();

        $("#recal").click(function () {
            var timeString = $("#datepickerMonth").val();
            var timeArray = timeString.split(" ");
            var splitedMonthYear = timeArray[1].split("/");
            var model = { month: splitedMonthYear[0], year: splitedMonthYear[1] };
            model.StationID = $("#ComboboxStation").val();


            $(".loader").show();
            $("#recalDetail").data('kendoGrid').dataSource.data([]);
            if ($("#ComboboxStation").val() != "" && $("#ComboboxStation").val() != undefined) {
                $.ajax({
                url: "@Url.Action("Index", "RevenueRecalculation")",
                contentType: "application/json",
                method: "post",
                data: JSON.stringify(model),
                success: function (data) {
                    if (data.message && data.message !== "") {
                        alert(data.message);
                        return;
                    }
                    show_stack_bottom_right('success', 'Tính lại doanh thu hóa đơn', 'Đã hoàn tất')
                                //loaddata();
                    var dataSource = new kendo.data.DataSource({
                        data: data
                    });
                    var grid = $("#recalDetail").data("kendoGrid");
                    grid.setDataSource(dataSource);

                    $(".loader").hide();
                            },
                            error: function (d) {
                                console.log(d);
                            }
                        });
            }
            else {
                setTimeout(function () { $(".loader").hide(); }, 1000);
                alert("Vui Lòng chọn cửa hàng!");
            }
        });
    });
</script>
