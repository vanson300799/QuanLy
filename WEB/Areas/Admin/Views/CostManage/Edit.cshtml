@model CostManageViewModel
@{
    var checkEmployee = WEB.WebHelpers.UserInfoHelper.GetUserData().StationID.HasValue;
}
@{
    Layout = "~/Areas/Admin/Views/Shared/_LayoutEmpty.cshtml";
}


@using (Html.BeginForm("Edit", "CostManage", FormMethod.Post, new { @id = "debt", enctype = "multipart/form-data", @class = "form-horizontal fix" }))
{
    @Html.HiddenFor(x => x.CurrentCode)
    @Html.HiddenFor(x => x.ID)
    <div class="validation-group">
        <div class="controls">
            @Html.ValidationSummary(true)

        </div>
    </div>
    <div class="control-group">
        @Html.Label(WebModels.WebResources.Date, new { @class = "control-label" })
        <div class="controls">
            @Html.TextBoxFor(m => m.DateString, new { @class = "input-block-level datepicker" })
            @Html.ValidationMessageFor(m => m.DateString)
        </div>
        <span class="form-obligatory">*</span>
    </div>

    <div class="control-group">
        @Html.Label(WebModels.WebResources.NumberArises, new { @class = "control-label" })
        <div class="controls">
            @Html.TextBoxFor(m => m.NumberArises, new { @class = "input-block-level" })
            @Html.ValidationMessageFor(m => m.NumberArises)
        </div>
        <span class="form-obligatory">*</span>
    </div>

    <div class="control-group">
        @Html.Label(WebModels.WebResources.SpendName, new { @class = "control-label" })
        <div class="controls">
            <div style="width:99%;">
                @(Html.Kendo().ComboBoxFor(m => m.Spend)
                                                              .DataTextField("SpendDisplayName")
                                                              .DataValueField("ID")
                                                              .Placeholder("Chọn người chi...")
                                                              .Suggest(true)
                                                              .Filter("contains")
                                                              .Name("Spend")
                                                              .HtmlAttributes(new { id = "ComboboxSpend" })
                                                              .DataSource(source =>
                                                              {
                                                                  source.Read(read =>
                                                              {
                                                                  read.Action("GetSpendName", "CostManage");
                                                              })
                                                                  .ServerFiltering(true);
                                                              })
                                                              .Events(e => e.DataBound("onDataBoundCombobox").Change("onChangeCombobox"))
                         )
            </div>
            @Html.ValidationMessageFor(m => m.Spend)
        </div>
    </div>

    <div class="control-group">
        @Html.Label(WebModels.WebResources.RecipientName, new { @class = "control-label" })
        <div class="controls">
            <div style="width:99%;">
                @(Html.Kendo().ComboBoxFor(m => m.Recipient)
                                                              .DataTextField("RecipientDisplayName")
                                                              .DataValueField("ID")
                                                              .Placeholder("Chọn người nhận...")
                                                              .Suggest(true)
                                                              .Filter("contains")
                                                              .Name("Recipient")
                                                              .HtmlAttributes(new { id = "ComboboxRecipient" })
                                                              .DataSource(source =>
                                                              {
                                                                  source.Read(read =>
                                                              {
                                                                  read.Action("GetRecipientName", "CostManage");
                                                              })
                                                                  .ServerFiltering(true);
                                                              })
                                                              .Events(e => e.DataBound("onDataBoundCombobox").Change("onChangeCombobox"))
                         )
            </div>
            @Html.ValidationMessageFor(m => m.Recipient)
        </div>
    </div>

    <div class="control-group">
        @Html.Label(WebModels.WebResources.Shop, new { @class = "control-label" })
        <div class="controls">
            <div style="width:99%;">
                @(Html.Kendo().ComboBoxFor(m => m.StationID)
                                                              .DataTextField("StationDisplayName")
                                                              .DataValueField("ID")
                                                              .Placeholder("Chọn cửa hàng...")
                                                              .Suggest(true)
                                                              .Filter("contains")
                                                              .Name("StationID")
                                                              .HtmlAttributes(new { id = "ComboboxStation" })
                                                              .DataSource(source =>
                                                              {
                                                                  source.Read(read =>
                                                              {
                                                                  read.Action("GetStation", "Station");
                                                              })
                                                                  .ServerFiltering(true);
                                                              })
                                                              .Events(e => e.DataBound("onDataBoundCombobox").Change("onChangeCombobox"))
                         )
            </div>
        </div>
    </div>
    <div class="control-group">
        @Html.Label(WebModels.WebResources.MoneyDebt, new { @class = "control-label" })
        <div class="controls">
            @Html.TextBoxFor(m => m.StringMoney, new { @class = "input-block-level debt-money", @id = "", @onkeypress = "return CheckNumeric()", @onkeyup = "FormatCurrency(this)" })
            @Html.HiddenFor(m => m.Money)
            @Html.ValidationMessageFor(m => m.StringMoney)
        </div>
        <span class="form-obligatory">*</span>
    </div>
    <div class="control-group">
        @Html.Label(WebModels.WebResources.InformationCost, new { @class = "control-label" })
        <div class="controls">
            @Html.TextAreaFor(m => m.Note, new { @class = "input-block-level "})
        </div>
    </div>

    <div class="form-actions">
        <button class="k-button" type="submit" id="save"><i class="icon-save"></i>@Resources.Common.SaveChanges</button>
        <button class="k-button destroy" type="reset">@WebModels.WebResources.Cancel</button>
    </div>
    @Html.AntiForgeryToken()
}

<script type="text/javascript">
    top.winsetup("Quản lý chi phí", screen.width * 0.42, screen.height * 0.47, true);
    function edit_success() {
        top.$("#window").data("kendoWindow").close();
        top.$("#grid").data("kendoGrid").dataSource.read();
    }

    $(".datepicker").kendoDateTimePicker({
        format: "dd/MM/yyyy HH:mm",
        timeFormat: "HH:mm",
        culture: "vi-VN",
    });
    setTimeout(function () {
        var height = $('form').height();
        window.parent.$(".k-window").height(height + 30);
        $(".k-button").click(function () {
            setTimeout(function () {
                var height = $('form').height();
                window.parent.$(".k-window").height(height + 30);
            }, 1000);
        });
    }, 1000);
    $(document).ready(function () {
        $("#debt").submit(function () {
            stringMoney = $("input[name='StringMoney']").val();
            $("input[name='Money']").val(stringMoney.replace(/,/g, ""));
            return true;
        });
    });
</script>
