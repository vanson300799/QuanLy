@model IEnumerable<WebModels.WebContent>

@{
    var webcate = (WebCategory)ViewBag.WebCategory;
    TempData["Title"] = webcate.Title;
}
<div class="content content-border">
    <div class="title-ca">         
         <a href="#">@webcate.Title</a>   
    </div>
    <div class="content">
        @foreach (var item in Model)
        {
            var img = item.Image != null ? item.Image : "/images/no-image.jpg";
            var module = item.WebModule;
            var url = Url.Action("Detail", "Home", new
            {
                metatitle = item.MetaTitle != null ? item.MetaTitle : "web",
                id = item.ID,
                m_metatitle = module.MetaTitle != null ? module.MetaTitle : "web",
                m_id = module.ID,
                area = ""
            });

            <div class="item thumbnail-item">
                <a href="@url"><img class="p-img-item" src="@img" alt="" title="" /></a>
                <img class="p-logo" src="/Images/p-logo.jpg" />
                <a href="@url"><p>@item.Title</p></a>
                <div class="tooltip">
                    <img class="p-img-item" src="@img" alt="" width="330" height="185" />
                    <span class="overlay"></span>
                </div>
            </div>
        }
        <div class="clear" style="height: 17px;"></div>
        @if (ViewBag.TotalItemCount > ApplicationService.PageSize)
        {
            <div class="pager">
                @Html.Raw(Html.Pager(
                    new Options
                    {
                        PageSize = ApplicationService.PageSize,
                        TotalItemCount = ViewBag.TotalItemCount,
                        CurrentPage = ViewBag.CurrentPage,
                        ItemTexts = new ItemTexts() { Next = "", Previous = "" },
                        ItemIcon = new ItemIcon() { First = "icon-backward", Previous = "icon-chevron-left", Next = "icon-chevron-right", Last = "icon-forward" },
                        TooltipTitles = new TooltipTitles() { Next = Resources.Common.NextPage, Previous = Resources.Common.PreviousPage },
                        Size = Size.normal,
                        IsShowControls = true,
                        Alignment = Alignment.centered,
                        IsShowFirstLast = false,
                        IsShowPages = true
                    }, new RouteValueDictionary(ViewBag.RouteValues)))
            </div>
        }
    </div>
</div>